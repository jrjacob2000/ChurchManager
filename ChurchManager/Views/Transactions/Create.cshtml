@model ChurchManager.Models.TransactionView

@{
    ViewBag.Title = "New Transaction";
}
<style>
    .error {
        border-color: red
    }
</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createTransFormId" }))
{

    @Html.AntiForgeryToken()
    <div class="box box-default">

        <div class="box-header with-border">
            <div class="pull-left">
                @Html.LabelFor(model => model.AccountRegistryId, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10 ">
                    @Html.DropDownListFor(x => x.AccountRegistryId, Model.AccountOptions.GetAccountRegister(Model.AccountRegistryId.ToString()), "Select Account Register", new { @class = "form-control select" })

                    @Html.ValidationMessageFor(model => model.AccountRegistryId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="pull-right">
                <input type="submit" value="Save" class="btn btn-success" style="display:none" onclick="return validateSplits()" />
                <input id="submit" type="button" value="Save" class="btn btn-warning" style="padding:10px 20px" />
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <div class="row">
                <div class="col-md-2">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Payee, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Payee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Payee, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Payment, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Payment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Payment, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Deposit, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Deposit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deposit, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2"></div>

            </div>


            <div id="divSingleTrans" class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label">Account</label>
                        @*@Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label" })*@
                        @Html.DropDownList("AccountId", Model.AccountOptions.GetAccounts(), "Select Account", new { @class = "form-control select" })
                        @*@Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label">Fund</label>
                        @*@Html.LabelFor(model => model.AccountFundId, htmlAttributes: new { @class = "control-label" })*@
                        @Html.DropDownList("AccountFundId", Model.AccountOptions.GetFunds(), "Select Fund", new { @class = "form-control select" })
                        @*@Html.ValidationMessageFor(model => model.AccountFundId, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-md-1">
                    <div class="pull-right" style="margin-top: 23px">
                        <input id="btnSplit" type="button" value="split" class="btn btn-primary" />
                    </div>
                </div>

            </div>

            <div id="div_splitBody" style="display:none">
                <div class="pull-right">
                    <dl class="dl-horizontal">
                        <dt> <label for="SplitBalance" class=" col-form-label" style="align-self:center">Balance:</label></dt>
                        <dd>
                            <input id="SplitBalanceDisplay" type="text" readonly class="form-control" style="width:200px" />
                        </dd>

                    </dl>
                </div>
                <table id="table_split" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Account</th>
                            <th>Fund</th>
                            <th>Percent</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody id="tbody_splitBody">
                    </tbody>
                </table>


                <div id="div_split"></div>
                <div class="row">
                    <div class="col-md-12">
                        <input type="button" id="btnAddSplit" class="btn btn-primary" value="Add Another Row" />
                        <button id="btnCancel" class="btn btn-default"><i class="fa fa-ban"></i> Cancel</button>

                    </div>
                </div>
            </div>


        </div>
        <!-- /.box-body -->
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryunobtrusive")

    <!-- bootstrap datepicker -->
    <script src="~/AdminLTE_2_4_2/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- Select2 -->
    <script src="~/AdminLTE_2_4_2/bower_components/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Scripts/TransactionUpsert.js"></script>
}
