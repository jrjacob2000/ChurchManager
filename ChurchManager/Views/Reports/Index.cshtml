@model ChurchManager.Models.IncomeStatement

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    print {
	display:none
    }
     @@media print {
	    .print {display:block}
	    .no-print {display:none;}
        .report {
            border:0 !important;
        }
    }

    .table > tbody > tr > td,
    .table > tbody > tr > th,
    .table > tfoot > tr > td,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > thead > tr > th {
        border: 0;
    }

    .table,
    .table tr,
    .table th,
    .table td {
        background-color: white !important;
        padding-right: 15px !important;
    }

            .table > tbody + tbody {
                border-top: 0 !important;
                margin-top: 20px
            }

    .accountCol {
        padding-left: 50px !important
    }

    .accountColFooter {
        border-top-style: solid !important;
        border-top-width: 2px !important;
        border-top-color: black !important;
        text-align: right;
        font-weight: bold;        
    }

    .nonAccountCol {
        text-align: right !important;
    }
    .report{
        position: relative;
        background: #fff;
        border: 1px solid #f4f4f4;
        padding: 20px;
        margin: 10px 25px;
    }

    .netAsset {
        border-top-style: solid !important;
        border-top-width: 2px !important;
        border-top-color: black !important;
        text-align: right;
        font-weight: bold;
        padding-top: 20px !important;
    }
    .netAsset-DescCol {
        padding-top: 20px !important;
    }
 </style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="box box-default no-print">
        <div class="box-header with-border">

            <div class="col-md-2">
                <div class="form-group">
                    <label>Date From</label>
                    @Html.Editor("dateFrom", new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @required=true } })
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label>Date To</label>
                    @Html.Editor("dateTo", new { htmlAttributes = new { @class = "form-control", autocomplete = "off",@required=true } })
                </div>

            </div>
            <div class="col-md-8" style="padding-top:24px">
                <div class="form-group">
                    <input type="submit" value="Generate Report" class="btn btn-success" />
                    <div class="pull-right no-print">
                        <button onclick="javascript:window.print()" class="btn btn-default"><i class="fa fa-print"></i>Print</button>
                    </div>
                </div>
            </div>
           
            
        </div>
    </div>

}
@{
    IEnumerable<string> cols = null;
    if (Model != null)
    {
        var defaultCol = ((IDictionary<string, object>)Model.Incomes.FirstOrDefault());
        if (defaultCol == null)
        {
            defaultCol = ((IDictionary<string, object>)Model.Expenses.FirstOrDefault());
        }
        if (defaultCol != null)
        {
            cols = defaultCol.Select(x => x.Key);
        }
    }

}
@if (Model != null && cols != null)
{
    //title
<section class="report .print">
    <div class="row">
        <div class="col-xs-12">

            <h2 class="page-header" style="text-align:center">
                <small class="pull-right">Date: 2/10/2014</small><br />
                <strong>@Model.ReportTitle.ChurchName</strong>
                <small>
                    Satement of Activities
                </small>
                <small>
                    @Model.ReportTitle.Period
                </small>


            </h2>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 table-responsive">

            <table id="tableIncomeStatement" class="table table-condensed" cellspacing="0">
                <thead class="thead-light">
                    <tr>


                        @foreach (var col in cols)
                        {
                            <th>@(col == "Account" ? "" : col)</th>
                        }
                    </tr>
                </thead>
                <tbody id="tbody_Income">
                    <tr>
                        <td style="font-weight:bold; font-size:larger" colspan=@cols.Count()>Income</td>
                    </tr>
                    @if (Model.Incomes != null)
                    {
                        foreach (var item in Model.Incomes)
                        {
                            var rows = (IDictionary<string, object>)item;
                            //var cols = rows.Select(x => x.Key);

                            <tr>
                                @foreach (var key in cols)
                                {
                                    if (rows.ContainsKey(key))//check if column field is existing
                                    {
                                        <td class=@(key == "Account" ? "accountCol" : "nonAccountCol")>@rows[key]</td>
                                    }
                                    else
                                    {
                                        <td class=@(key == "Account" ? "accountCol" : "nonAccountCol")>0</td>
                                    }

                                }
                            </tr>

                        }
                        <tr id="tfoot_Income" style="font-weight:bold">
                            @for (var i = 0; cols.Count() > i; i++)
                            {
                                if (i > 0)
                                {
                                    <td class="accountColFooter"></td>
                                }
                                else
                                {
                                    <td class="accountCol"></td>
                                }

                            }
                        </tr>
                    }

                </tbody>

                <tbody id="tbody_Expenses">
                    <tr>
                        <td style="font-weight:bold; font-size:larger" colspan=@cols.Count()>Expenses</td>
                    </tr>
                    @if (Model.Expenses != null)
                    {
                        foreach (var item in Model.Expenses)
                        {
                            var rows = (IDictionary<string, object>)item;
                            //var cols = rows.Select(x => x.Key);

                            <tr>
                                @foreach (var key in cols)
                                {
                                    if (rows.ContainsKey(key))
                                    {
                                        <td class=@(key == "Account" ? "accountCol" : "nonAccountCol")>@rows[key]</td>
                                    }
                                    else
                                    {
                                        <td class=@(key == "Account" ? "accountCol" : "nonAccountCol")>0</td>
                                    }

                                }
                            </tr>

                        }
                    }


                </tbody>
                <tr id="tfoot_Expenses" style="font-weight:bold">
                    @for (var i = 0; cols.Count() > i; i++)
                    {
                        if (i > 0)
                        {
                            <td class="accountColFooter"></td>
                        }
                        else
                        {
                            <td class="accountCol"></td>
                        }

                    }
                </tr>
                <tr>
                    @*filler*@
                    <td colspan=@cols.Count()></td>
                </tr>
                <tbody id="tbody_NetAssetEndOfPeriod">

                    @foreach (var item in Model.NetAssetBeginningOfPeriod)
                    {
                        var rows = (IDictionary<string, object>)item;
                        //var cols = rows.Select(x => x.Key);

                        <tr>
                            @foreach (var key in cols)
                            {
                            <td style="font-weight:bold" class=@(key == "Account" ? "netAsset-DescCol" : "netAsset" )>@(rows.ContainsKey(key) ? rows[key] : 0)</td>
                            }
                        </tr>

                    }

                </tbody>
                <tr>
                    @*filler*@
                    <td colspan=@cols.Count()></td>
                </tr>
                <tbody id="tbody_NetAssetEndOfPeriod">

                    @foreach (var item in Model.NetAssetEndOfPeriod)
                    {
                        var rows = (IDictionary<string, object>)item;
                        //var cols = rows.Select(x => x.Key);

                        <tr>
                            @foreach (var key in cols)
                            {
                                <td style="font-weight:bold" class=@(key == "Account" ? "netAsset-DescCol" : "netAsset")>@rows[key]</td>
                            }
                        </tr>

                    }

                </tbody>
            </table>
        </div>
    </div>
    
</section>
}
else
{
    <div class="box box-default">
        <div class="box-body">
            <p style="text-align:center; font-weight:bold">No data found</p>
        </div>
    </div>
}

@section Scripts {
    <script src="~/AdminLTE_2_4_2/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/AdminLTE_2_4_2/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/AdminLTE_2_4_2/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- Select2 -->
    <script src="~/AdminLTE_2_4_2/bower_components/select2/dist/js/select2.full.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2();
            //Date picker
            $('#dateFrom').datepicker({
                autoclose: true
            });
            $('#dateTo').datepicker({
                autoclose: true
            });

            $('table thead th').each(function (i) {
                calculateColumn(i);
            });
        });

        function calculateColumn(index) {
            var totalIncome = 0;
            $('#tbody_Income tr').each(function () {
                var value = parseFloat($('td', this).eq(index).text());
                if (!isNaN(value)) {
                    totalIncome += value;
                }
            });
            $('#tfoot_Income td').eq(index).text(index > 0 ? parseFloat(totalIncome).toFixed(2) : "Total Income");

            var totalExpenses = 0;
            $('#tbody_Expenses tr').each(function () {
                var value = parseFloat($('td', this).eq(index).text());
                if (!isNaN(value)) {
                    totalExpenses += value;
                }
            });
            $('#tfoot_Expenses td').eq(index).text(index > 0 ? parseFloat(totalExpenses).toFixed(2) : "Total Expenses");
        }
    </script>
}
